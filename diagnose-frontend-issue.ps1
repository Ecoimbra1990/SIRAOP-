# Script para diagnosticar problema do frontend
Write-Host "üîç Diagnosticando problema do frontend..." -ForegroundColor Green

# Verificar se estamos no diret√≥rio correto
if (Test-Path "frontend-pwa\out") {
    Write-Host "‚úÖ Pasta 'out' encontrada" -ForegroundColor Green
    
    # Listar arquivos
    Write-Host "üìÅ Arquivos na pasta 'out':" -ForegroundColor Yellow
    Get-ChildItem "frontend-pwa\out" -Recurse | Select-Object Name, LastWriteTime
    
    # Verificar se h√° arquivos HTML
    $htmlFiles = Get-ChildItem "frontend-pwa\out" -Filter "*.html" -Recurse
    if ($htmlFiles.Count -gt 0) {
        Write-Host "‚úÖ Encontrados $($htmlFiles.Count) arquivos HTML" -ForegroundColor Green
        
        # Verificar conte√∫do dos arquivos
        Write-Host "üìÑ Verificando conte√∫do dos arquivos HTML:" -ForegroundColor Yellow
        
        # Verificar index.html
        $indexContent = Get-Content "frontend-pwa\out\index.html" -Raw
        if ($indexContent -like "*Dimensionamento*") {
            Write-Host "‚úÖ index.html cont√©m 'Dimensionamento'" -ForegroundColor Green
        } else {
            Write-Host "‚ùå index.html n√£o cont√©m 'Dimensionamento'" -ForegroundColor Red
        }
        
        # Verificar se h√° cache bust
        if ($indexContent -like "*Cache Bust:*") {
            Write-Host "‚úÖ index.html cont√©m cache bust" -ForegroundColor Green
        } else {
            Write-Host "‚ùå index.html n√£o cont√©m cache bust" -ForegroundColor Red
        }
        
        # Verificar se h√° meta tags de cache
        if ($indexContent -like "*Cache-Control*") {
            Write-Host "‚úÖ index.html cont√©m meta tags de cache" -ForegroundColor Green
        } else {
            Write-Host "‚ùå index.html n√£o cont√©m meta tags de cache" -ForegroundColor Red
        }
        
        Write-Host "üéâ Diagn√≥stico conclu√≠do!" -ForegroundColor Green
        
        # Explicar o problema
        Write-Host "üîç POSS√çVEIS CAUSAS:" -ForegroundColor Yellow
        Write-Host "1. Cache do navegador - O navegador est√° mostrando vers√£o antiga" -ForegroundColor Red
        Write-Host "2. Firebase n√£o atualizou - O deploy n√£o foi processado" -ForegroundColor Red
        Write-Host "3. DNS/CDN cache - O Firebase CDN est√° servindo vers√£o antiga" -ForegroundColor Red
        Write-Host "4. Configura√ß√£o incorreta - Firebase n√£o est√° servindo arquivos corretos" -ForegroundColor Red
        
        Write-Host "üîß SOLU√á√ïES:" -ForegroundColor Yellow
        Write-Host "1. Limpar cache do navegador (Ctrl+F5 ou Ctrl+Shift+R)" -ForegroundColor Cyan
        Write-Host "2. Abrir em aba an√¥nima/privada" -ForegroundColor Cyan
        Write-Host "3. Aguardar alguns minutos para o Firebase processar" -ForegroundColor Cyan
        Write-Host "4. Verificar se o Firebase CLI est√° funcionando" -ForegroundColor Cyan
        
        Write-Host "üí° TESTE R√ÅPIDO:" -ForegroundColor Yellow
        Write-Host "1. Acesse: https://siraop-frontend.web.app" -ForegroundColor Cyan
        Write-Host "2. Pressione Ctrl+F5 para for√ßar atualiza√ß√£o" -ForegroundColor Cyan
        Write-Host "3. Procure por 'Cache Bust:' na p√°gina" -ForegroundColor Cyan
        Write-Host "4. Verifique se h√° link para 'Dimensionamento'" -ForegroundColor Cyan
        
    } else {
        Write-Host "‚ùå Nenhum arquivo HTML encontrado na pasta 'out'" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå Pasta 'out' n√£o encontrada" -ForegroundColor Red
    Write-Host "üí° Execute primeiro o script de build" -ForegroundColor Yellow
}

# Voltar ao diret√≥rio raiz
Set-Location ".."
